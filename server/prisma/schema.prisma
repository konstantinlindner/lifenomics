generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
}

model User {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  portfolios  Portfolio[]
  email       String        @unique
  password    String
  firstName   String
  lastName    String
  birthDate   DateTime?
  avatarUrl   String?
  role        UserRole      @default(user)
  Transaction Transaction[]
}

model Portfolio {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  assets    Asset[]
  name      String
  comment   String?
}

enum AssetType {
  stock
  crypto
  forex
  commodity
}

model Asset {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  exchange     Exchange      @relation(fields: [exchangeId], references: [id])
  exchangeId   Int
  portfolios   Portfolio[]
  transactions Transaction[]
  industry     Industry      @relation(fields: [industryId], references: [id])
  industryId   Int
  tags         AssetTag[]
  type         AssetType
  isin         String?
  ticker       String
  name         String
  shortName    String?
  class        String?
  isActive     Boolean       @default(true)
  adr          Boolean?
  description  String?
  imageUrl     String?
  website      String?
}

model Exchange {
  id                Int      @id @default(autoincrement())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  currency          Currency @relation(fields: [currencyId], references: [id])
  currencyId        Int
  assets            Asset[]
  MIC               String
  name              String
  shortName         String?
  code              String?
  codeAlt           String?
  timezoneName      String
  timezoneShortName String
  country           String
  city              String
  website           String
  emoji             String
}

enum TransactionType {
  purchase
  sale
}

model Transaction {
  id              Int             @id @default(autoincrement())
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  asset           Asset           @relation(fields: [assetId], references: [id])
  assetId         Int
  user            User            @relation(fields: [userId], references: [id])
  userId          Int
  transactionType TransactionType
  quantity        Decimal
  price           Decimal
  timestamp       DateTime
}

model Currency {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  exchanges Exchange[]
  name      String
}

model Industry {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  sector    Sector   @relation(fields: [sectorId], references: [id])
  sectorId  Int
  name      String
  Asset     Asset[]
}

model Sector {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  industries Industry[]
  name       String
}

model AssetTag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assets    Asset[]
  name      String
}
