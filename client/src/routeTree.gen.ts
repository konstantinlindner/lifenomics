/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppTransactionsRouteImport } from './routes/_app/transactions'
import { Route as AppSectorsRouteImport } from './routes/_app/sectors'
import { Route as AppProfileRouteImport } from './routes/_app/profile'
import { Route as AppPortfoliosRouteImport } from './routes/_app/portfolios'
import { Route as AppMyAssetsRouteImport } from './routes/_app/my-assets'
import { Route as AppIndustriesRouteImport } from './routes/_app/industries'
import { Route as AppExchangesRouteImport } from './routes/_app/exchanges'
import { Route as AppDividendsRouteImport } from './routes/_app/dividends'
import { Route as AppCurrenciesRouteImport } from './routes/_app/currencies'
import { Route as AppAssetsRouteImport } from './routes/_app/assets'
import { Route as AppAdminRouteImport } from './routes/_app/admin'
import { Route as AppPortfoliosPortfolioIdRouteImport } from './routes/_app/portfolios.$portfolioId'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppTransactionsRoute = AppTransactionsRouteImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSectorsRoute = AppSectorsRouteImport.update({
  id: '/sectors',
  path: '/sectors',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppProfileRoute = AppProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPortfoliosRoute = AppPortfoliosRouteImport.update({
  id: '/portfolios',
  path: '/portfolios',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMyAssetsRoute = AppMyAssetsRouteImport.update({
  id: '/my-assets',
  path: '/my-assets',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppIndustriesRoute = AppIndustriesRouteImport.update({
  id: '/industries',
  path: '/industries',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppExchangesRoute = AppExchangesRouteImport.update({
  id: '/exchanges',
  path: '/exchanges',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDividendsRoute = AppDividendsRouteImport.update({
  id: '/dividends',
  path: '/dividends',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCurrenciesRoute = AppCurrenciesRouteImport.update({
  id: '/currencies',
  path: '/currencies',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAssetsRoute = AppAssetsRouteImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAdminRoute = AppAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPortfoliosPortfolioIdRoute =
  AppPortfoliosPortfolioIdRouteImport.update({
    id: '/$portfolioId',
    path: '/$portfolioId',
    getParentRoute: () => AppPortfoliosRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/admin': typeof AppAdminRoute
  '/assets': typeof AppAssetsRoute
  '/currencies': typeof AppCurrenciesRoute
  '/dividends': typeof AppDividendsRoute
  '/exchanges': typeof AppExchangesRoute
  '/industries': typeof AppIndustriesRoute
  '/my-assets': typeof AppMyAssetsRoute
  '/portfolios': typeof AppPortfoliosRouteWithChildren
  '/profile': typeof AppProfileRoute
  '/sectors': typeof AppSectorsRoute
  '/transactions': typeof AppTransactionsRoute
  '/': typeof AppIndexRoute
  '/portfolios/$portfolioId': typeof AppPortfoliosPortfolioIdRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/admin': typeof AppAdminRoute
  '/assets': typeof AppAssetsRoute
  '/currencies': typeof AppCurrenciesRoute
  '/dividends': typeof AppDividendsRoute
  '/exchanges': typeof AppExchangesRoute
  '/industries': typeof AppIndustriesRoute
  '/my-assets': typeof AppMyAssetsRoute
  '/portfolios': typeof AppPortfoliosRouteWithChildren
  '/profile': typeof AppProfileRoute
  '/sectors': typeof AppSectorsRoute
  '/transactions': typeof AppTransactionsRoute
  '/': typeof AppIndexRoute
  '/portfolios/$portfolioId': typeof AppPortfoliosPortfolioIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_app/admin': typeof AppAdminRoute
  '/_app/assets': typeof AppAssetsRoute
  '/_app/currencies': typeof AppCurrenciesRoute
  '/_app/dividends': typeof AppDividendsRoute
  '/_app/exchanges': typeof AppExchangesRoute
  '/_app/industries': typeof AppIndustriesRoute
  '/_app/my-assets': typeof AppMyAssetsRoute
  '/_app/portfolios': typeof AppPortfoliosRouteWithChildren
  '/_app/profile': typeof AppProfileRoute
  '/_app/sectors': typeof AppSectorsRoute
  '/_app/transactions': typeof AppTransactionsRoute
  '/_app/': typeof AppIndexRoute
  '/_app/portfolios/$portfolioId': typeof AppPortfoliosPortfolioIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-in'
    | '/sign-up'
    | '/admin'
    | '/assets'
    | '/currencies'
    | '/dividends'
    | '/exchanges'
    | '/industries'
    | '/my-assets'
    | '/portfolios'
    | '/profile'
    | '/sectors'
    | '/transactions'
    | '/'
    | '/portfolios/$portfolioId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/sign-up'
    | '/admin'
    | '/assets'
    | '/currencies'
    | '/dividends'
    | '/exchanges'
    | '/industries'
    | '/my-assets'
    | '/portfolios'
    | '/profile'
    | '/sectors'
    | '/transactions'
    | '/'
    | '/portfolios/$portfolioId'
  id:
    | '__root__'
    | '/_app'
    | '/sign-in'
    | '/sign-up'
    | '/_app/admin'
    | '/_app/assets'
    | '/_app/currencies'
    | '/_app/dividends'
    | '/_app/exchanges'
    | '/_app/industries'
    | '/_app/my-assets'
    | '/_app/portfolios'
    | '/_app/profile'
    | '/_app/sectors'
    | '/_app/transactions'
    | '/_app/'
    | '/_app/portfolios/$portfolioId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/transactions': {
      id: '/_app/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof AppTransactionsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/sectors': {
      id: '/_app/sectors'
      path: '/sectors'
      fullPath: '/sectors'
      preLoaderRoute: typeof AppSectorsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/portfolios': {
      id: '/_app/portfolios'
      path: '/portfolios'
      fullPath: '/portfolios'
      preLoaderRoute: typeof AppPortfoliosRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/my-assets': {
      id: '/_app/my-assets'
      path: '/my-assets'
      fullPath: '/my-assets'
      preLoaderRoute: typeof AppMyAssetsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/industries': {
      id: '/_app/industries'
      path: '/industries'
      fullPath: '/industries'
      preLoaderRoute: typeof AppIndustriesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/exchanges': {
      id: '/_app/exchanges'
      path: '/exchanges'
      fullPath: '/exchanges'
      preLoaderRoute: typeof AppExchangesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/dividends': {
      id: '/_app/dividends'
      path: '/dividends'
      fullPath: '/dividends'
      preLoaderRoute: typeof AppDividendsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/currencies': {
      id: '/_app/currencies'
      path: '/currencies'
      fullPath: '/currencies'
      preLoaderRoute: typeof AppCurrenciesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/assets': {
      id: '/_app/assets'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof AppAssetsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/admin': {
      id: '/_app/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AppAdminRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/portfolios/$portfolioId': {
      id: '/_app/portfolios/$portfolioId'
      path: '/$portfolioId'
      fullPath: '/portfolios/$portfolioId'
      preLoaderRoute: typeof AppPortfoliosPortfolioIdRouteImport
      parentRoute: typeof AppPortfoliosRoute
    }
  }
}

interface AppPortfoliosRouteChildren {
  AppPortfoliosPortfolioIdRoute: typeof AppPortfoliosPortfolioIdRoute
}

const AppPortfoliosRouteChildren: AppPortfoliosRouteChildren = {
  AppPortfoliosPortfolioIdRoute: AppPortfoliosPortfolioIdRoute,
}

const AppPortfoliosRouteWithChildren = AppPortfoliosRoute._addFileChildren(
  AppPortfoliosRouteChildren,
)

interface AppRouteRouteChildren {
  AppAdminRoute: typeof AppAdminRoute
  AppAssetsRoute: typeof AppAssetsRoute
  AppCurrenciesRoute: typeof AppCurrenciesRoute
  AppDividendsRoute: typeof AppDividendsRoute
  AppExchangesRoute: typeof AppExchangesRoute
  AppIndustriesRoute: typeof AppIndustriesRoute
  AppMyAssetsRoute: typeof AppMyAssetsRoute
  AppPortfoliosRoute: typeof AppPortfoliosRouteWithChildren
  AppProfileRoute: typeof AppProfileRoute
  AppSectorsRoute: typeof AppSectorsRoute
  AppTransactionsRoute: typeof AppTransactionsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAdminRoute: AppAdminRoute,
  AppAssetsRoute: AppAssetsRoute,
  AppCurrenciesRoute: AppCurrenciesRoute,
  AppDividendsRoute: AppDividendsRoute,
  AppExchangesRoute: AppExchangesRoute,
  AppIndustriesRoute: AppIndustriesRoute,
  AppMyAssetsRoute: AppMyAssetsRoute,
  AppPortfoliosRoute: AppPortfoliosRouteWithChildren,
  AppProfileRoute: AppProfileRoute,
  AppSectorsRoute: AppSectorsRoute,
  AppTransactionsRoute: AppTransactionsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
